     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  ;Se da un sir de caractere S. Sa se construiasca sirul D care sa contina toate caracterele speciale (!@#$%^&*) din sirul S.
    11                                  ;Exemplu:
    12                                  ;S: '+', '4', '2', 'a', '@', '3', '$', '*'
    13                                  ;D: '@','$','*'
    14                                  
    15                                  ; our data is declared here (the variables needed by our program)
    16                                  segment data use32 class=data
    17 00000000 2B3432614033242A            s db '+', '4', '2', 'a', '@', '3', '$', '*'
    18                                      l equ $-s
    19 00000008 00<rept>                    d times l db 0
    20                                  
    21                                  ; our code starts here
    22                                  segment code use32 class=code
    23                                      start:
    24 00000000 B908000000                      mov ecx, l
    25 00000005 BE00000000                      mov esi, 0
    26 0000000A BF00000000                      mov edi, 0
    27 0000000F E322                            jecxz Sfarsit
    28                                          Repeta:
    29 00000011 8A86[00000000]                      mov al, [s+esi]
    30 00000017 3C30                                cmp al, 30h
    31 00000019 7706                                ja semn; nu e semn sare
    32 0000001B 8887[08000000]                          mov [d+edi], al
    33                                              semn:
    34 00000021 3C3A                                cmp al, 3Ah
    35 00000023 720A                                jb sf; sarim perste cifre
    36 00000025 3C40                                cmp al,40h
    37 00000027 7706                                ja sf; sare la sfarsit daca e mai mare decat 40h adica e litera
    38 00000029 8887[08000000]                          mov [d+edi], al
    39                                              
    40                                              sf:
    41 0000002F 46                                  inc esi
    42 00000030 47                                  inc edi
    43 00000031 E2DE                            loop Repeta
    44                                          Sfarsit:
    45                                      
    46                                          ; exit(0)
    47 00000033 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    48 00000035 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
