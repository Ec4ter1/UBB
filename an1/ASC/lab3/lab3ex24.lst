     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  ;24. (a + b + c) - d + (b - c)
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13 00000000 02                          a db 2
    14 00000001 0300                        b dw 3
    15 00000003 01000000                    c dd 1
    16 00000007 0400000000000000            d dq 4
    17                                  
    18                                  ; our code starts here
    19                                  segment code use32 class=code
    20                                      start:
    21 00000000 A0[00000000]                    mov al , [a]
    22 00000005 6698                            cbw; ax = 0002h
    23 00000007 660305[01000000]                add ax, [b] ; ax = 0005h
    24 0000000E 98                              cwde; eax = 0000 0005h
    25 0000000F 8B1D[03000000]                  mov ebx, [c]
    26 00000015 01C3                            add ebx, eax; ebx = 0000 0006h
    27 00000017 66A1[01000000]                  mov ax, [b]
    28 0000001D 98                              cwde; eax = 0000 0003h
    29 0000001E 2B05[03000000]                  sub eax, [c]; eax = 0000 0002h
    30 00000024 01D8                            add eax, ebx; eax = 0000 0008h
    31 00000026 99                              cdq; edx:eax = 0000 0000 0000 0008h
    32 00000027 8B1D[0B000000]                  mov ebx, [d+4]; ebx = 0000 0000h
    33 0000002D 8B0D[07000000]                  mov ecx, [d]
    34 00000033 29C8                            sub eax, ecx; eax =..2h
    35 00000035 19DA                            sbb edx, ebx
    36                                          
    37                                          
    38                                      
    39                                          ; exit(0)
    40 00000037 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    41 00000039 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
