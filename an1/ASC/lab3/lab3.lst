     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13 00000000 07                          a db 7
    14 00000001 0500                        b dw 5
    15 00000003 09000000                    c dd 9
    16 00000007 0400000000000000            d dq 4
    17                                  
    18                                  ; our code starts here
    19                                  segment code use32 class=code
    20                                      start:
    21 00000000 A0[00000000]                    mov al, [a]
    22 00000005 B400                            mov ah, 0
    23 00000007 660305[01000000]                add ax, [b]
    24 0000000E 8B1D[03000000]                  mov ebx, [c]
    25 00000014 BA00000000                      mov edx, 0
    26 00000019 8A15[00000000]                  mov dl, [a]
    27 0000001F 29D3                            sub ebx, edx
    28 00000021 B900000000                      mov ecx, 0
    29 00000026 6689C1                          mov cx, ax
    30 00000029 01D9                            add ecx, ebx
    31 0000002B 51                              push ecx
    32 0000002C BB00000000                      mov ebx, 0
    33 00000031 8B15[0B000000]                  mov edx, [d+4]
    34 00000037 A1[07000000]                    mov eax, [d]
    35 0000003C 021D[00000000]                  add bl, [a]
    36 00000042 B900000000                      mov ecx, 0
    37 00000047 01D8                            add eax, ebx
    38 00000049 11CA                            adc edx, ecx
    39 0000004B 5B                              pop ebx
    40 0000004C B900000000                      mov ecx, 0
    41 00000051 29D8                            sub eax, ebx
    42 00000053 19CA                            sbb edx, ecx
    43                                          ; exit(0)
    44 00000055 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    45 00000057 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
