     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ;Se da un sir de octeti S. Sa se construiasca sirul D astfel: sa se puna mai intai elementele de pe pozitiile pare din S iar apoi elementele de pe ;pozitiile impare din S.
    12                                  ; our data is declared here (the variables needed by our program)
    13                                  segment data use32 class=data
    14 00000000 0102030405060708            s db 1, 2, 3, 4, 5, 6, 7, 8
    15                                      l equ $-s
    16 00000008 00<rept>                    d times l db 0
    17                                  ; our code starts here
    18                                  segment code use32 class=code
    19                                      start:
    20 00000000 B908000000                      mov ecx, l; lungimea
    21 00000005 BE00000000                      mov esi, 0; pt sirul s
    22 0000000A BF00000000                      mov edi, 0; pt numerele pare
    23 0000000F BA07000000                      mov edx, l-1; pt numerele impare
    24 00000014 E321                            jecxz Sfarsit
    25                                          Repeta:
    26 00000016 8A86[00000000]                      mov al, [s+esi]
    27 0000001C A801                                test al, 01h; zf= 1 par sau 0 impar
    28 0000001E 740C                                jz par
    29                                              ;e impar
    30 00000020 57                                  push edi
    31 00000021 89D7                                mov edi, edx
    32 00000023 8887[08000000]                      mov [d+edi], al
    33 00000029 4A                                  dec edx
    34 0000002A 7508                                jnz sf_bucla
    35                                              par:
    36 0000002C 5F                                  pop edi
    37 0000002D 8887[08000000]                      mov [d+edi], al
    38 00000033 47                                  inc edi
    39                                              sf_bucla:
    40 00000034 46                                  inc esi
    41 00000035 E2DF                            loop Repeta
    42                                          Sfarsit:
    43                                          ; exit(0)
    44 00000037 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    45 00000039 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
