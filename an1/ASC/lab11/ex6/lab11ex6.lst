     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, printf, scanf  ; adaugam printf si scanf ca functii externe           
     8                                  import exit msvcrt.dll     
     9                                  import printf msvcrt.dll     ; indicam asamblorului ca functia printf se gaseste in libraria msvcrt.dll
    10                                  import scanf msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
    11                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    12                                  ;extern concatenare
    13                                  ;6. Se citesc trei siruri de caractere. Sa se determine si sa se afiseze rezultatul concatenarii lor.
    14                                  ; our data is declared here (the variables needed by our program)
    15                                  segment data use32 class=data
    16                                      max equ 50
    17 00000000 00<rept>                    s1 times max+1 db 0
    18 00000033 00<rept>                    s2 times max+1 db 0
    19 00000066 00<rept>                    s3 times max+1 db 0
    20 00000099 00<rept>                    d times 2*max+1 db 0
    21 000000FE 00000000                    len1 dd 0
    22 00000102 00000000                    len2 dd 0
    23 00000106 00000000                    len3 dd 0
    24                                      
    25 0000010A 256400                      format_d db "%d", 0
    26 0000010D 257300                      format_r db "%s", 0
    27 00000110 5369722066696E616C-         format_p db "Sir final: %s", 13, 10, 0
    27 00000119 3A2025730D0A00     
    28 00000120 436F6E6361743A2025-         format db "Concat: %s,%s,%s", 13, 10, 0
    28 00000129 732C25732C25730D0A-
    28 00000132 00                 
    29 00000133 44617469207072696D-         text_1 db "Dati primul sir: ", 0
    29 0000013C 756C207369723A2000 
    30 00000145 4461746920616C2064-         text_2 db "Dati al doilea sir: ", 0
    30 0000014E 6F696C656120736972-
    30 00000157 3A2000             
    31 0000015A 4461746920616C2074-         text_3 db "Dati al treilea sir: ", 0
    31 00000163 7265696C6561207369-
    31 0000016C 723A2000           
    32 00000170 44617469206C756E67-         text_4 db "Dati lungimea: ", 0
    32 00000179 696D65613A2000     
    33                                  
    34                                  ; our code starts here
    35                                  segment code use32 class=code
    36                                  
    37                                      concatenare:
    38 00000000 8B742410                            mov esi, [esp+16]; s1
    39 00000004 8B7C2404                            mov edi, [esp+4]; d
    40 00000008 8B5C241C                            mov ebx, [esp+28]; len1
    41 0000000C 8B0B                                mov ecx, [ebx]; valoarea lui len1
    42                                              repeta:
    43 0000000E AC                                      lodsb; incarca in al ce e in esi
    44 0000000F AA                                      stosb; incarca in edi octetul din al
    45 00000010 E2FC                                loop repeta
    46                                              
    47 00000012 8B74240C                            mov esi, [esp+12]; s2
    48 00000016 8B5C2418                            mov ebx, [esp+24]
    49 0000001A 8B0B                                mov ecx, [ebx]
    50                                              repeta2:
    51 0000001C AC                                      lodsb; incarca in al ce e in esi
    52 0000001D AA                                      stosb; incarca in edi octetul din al
    53 0000001E E2FC                                loop repeta2
    54                                             
    55 00000020 8B742408                            mov esi, [esp+8]; s3
    56 00000024 8B5C2418                            mov ebx, [esp+24]; len3
    57 00000028 8B0B                                mov ecx, [ebx]
    58                                              repeta3:
    59 0000002A AC                                      lodsb; incarca in al ce e in esi
    60 0000002B AA                                      stosb; incarca in edi octetul din al
    61 0000002C E2FC                                loop repeta3
    62                                              
    63 0000002E C21000                              ret 4*4
    64                                              
    65                                      start:
    66                                          ;Dati lungimea
    67 00000031 68[70010000]                    push dword text_4
    68 00000036 FF15[00000000]                  call [printf]
    69 0000003C 83C404                          add esp, 4
    70 0000003F 68[FE000000]                    push dword len1
    71 00000044 68[0A010000]                    push dword format_d
    72 00000049 FF15[00000000]                  call [scanf]
    73 0000004F 83C408                          add esp, 4*2
    74                                          
    75                                          ;Dati primul sir
    76 00000052 68[33010000]                    push dword text_1
    77 00000057 FF15[00000000]                  call [printf]
    78 0000005D 83C404                          add esp, 4
    79                                          
    80 00000060 68[00000000]                    push  dword s1       ; ! adresa lui n, nu valoarea
    81 00000065 68[0D010000]                    push  dword format_r
    82 0000006A FF15[00000000]                  call  [scanf]       ; apelam functia scanf pentru citire
    83 00000070 83C408                          add  esp, 4 * 2 
    84                                          
    85 00000073 68[00000000]                    push  dword s1
    86 00000078 68[10010000]                    push  dword format_p
    87 0000007D FF15[00000000]                  call  [printf]
    88 00000083 83C408                          add  esp,4*2 
    89                                          
    90                                          ;Dati lungimea
    91 00000086 68[70010000]                    push dword text_4
    92 0000008B FF15[00000000]                  call [printf]
    93 00000091 83C404                          add esp, 4
    94 00000094 68[02010000]                    push dword len2
    95 00000099 68[0A010000]                    push dword format_d
    96 0000009E FF15[00000000]                  call [scanf]
    97 000000A4 83C408                          add esp, 4*2
    98                                          
    99                                          ;Dati al doilea sir
   100 000000A7 68[45010000]                    push dword text_2
   101 000000AC FF15[00000000]                  call [printf]
   102 000000B2 83C404                          add esp, 4
   103                                          
   104 000000B5 68[33000000]                    push  dword s2       ; ! adresa lui n, nu valoarea
   105 000000BA 68[0D010000]                    push  dword format_r
   106 000000BF FF15[00000000]                  call  [scanf]       ; apelam functia scanf pentru citire
   107 000000C5 83C408                          add  esp, 4 * 2 
   108                                          
   109 000000C8 68[33000000]                    push  s2
   110 000000CD 68[10010000]                    push  dword format_p
   111 000000D2 FF15[00000000]                  call  [printf]
   112 000000D8 83C408                          add  esp,4*2
   113                                          
   114                                          ;Dati lungimea
   115 000000DB 68[70010000]                    push dword text_4
   116 000000E0 FF15[00000000]                  call [printf]
   117 000000E6 83C404                          add esp, 4
   118                                          
   119 000000E9 68[FE000000]                    push dword len1
   120 000000EE 68[0A010000]                    push dword format_d
   121 000000F3 FF15[00000000]                  call [scanf]
   122 000000F9 83C408                          add esp, 4*2
   123                                          
   124                                          ;Dati al treilea sir
   125 000000FC 68[5A010000]                    push dword text_3
   126 00000101 FF15[00000000]                  call [printf]
   127 00000107 83C404                          add esp, 4
   128                                          
   129 0000010A 68[66000000]                    push  dword s3       ; ! adresa lui n, nu valoarea
   130 0000010F 68[0D010000]                    push  dword format_r
   131 00000114 FF15[00000000]                  call  [scanf]       ; apelam functia scanf pentru citire
   132 0000011A 83C408                          add  esp, 4 * 2 
   133                                          
   134 0000011D 68[66000000]                    push  dword s3
   135 00000122 68[10010000]                    push  dword format_p 
   136 00000127 FF15[00000000]                  call  [printf]
   137 0000012D 83C408                          add  esp,4*2
   138                                          
   139 00000130 68[FE000000]                    push dword len1
   140 00000135 68[02010000]                    push dword len2
   141 0000013A 68[06010000]                    push dword len3
   142 0000013F 68[00000000]                    push dword s1
   143 00000144 68[33000000]                    push dword s2
   144 00000149 68[66000000]                    push dword s3
   145 0000014E 68[99000000]                    push dword d
   146 00000153 E8A8FEFFFF                      call concatenare
   147                                          
   148                                          
   149 00000158 68[99000000]                    push dword d
   150 0000015D 68[10010000]                    push format_p
   151 00000162 FF15[00000000]                  call [printf]
   152 00000168 83C408                          add esp, 4*2
   153                                          
   154                                          ; exit(0)
   155 0000016B 6A00                            push    dword 0      ; push the parameter for exit onto the stack
   156 0000016D FF15[00000000]                  call    [exit]       ; call exit to terminate the program
   157                                  
   158                                       
