     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                                            
    11                                  ;23. Se da octetul A si cuvantul B. Sa se formeze dublucuvantul C:
    12                                  ;bitii 24-31 ai lui C sunt bitii lui A
    13                                  ;bitii 16-23 ai lui C sunt inversul bitilor din octetul cel mai putin semnificativ al lui B
    14                                  ;bitii 10-15 ai lui C sunt 1
    15                                  ;bitii 2-9 ai lui C sunt bitii din octetul cel mai semnificativ al lui B
    16                                  ;bitii 0-1 se completeaza cu valoarea bitului de semn al lui A
    17                                  ; our data is declared here (the variables needed by our program)
    18                                  segment data use32 class=data
    19 00000000 FF                          a db 11111111b
    20 00000001 CCCC                        b dw 1100110011001100b
    21 00000003 00000000                    c dd 0
    22                                  
    23                                  ; our code starts here
    24                                  segment code use32 class=code
    25                                      start:
    26 00000000 B800000000                      mov eax, 0
    27 00000005 8A25[00000000]                  mov ah, [a]
    28 0000000B 668B1D[01000000]                mov bx, [b]
    29 00000012 80F3FF                          xor bl, 11111111b
    30 00000015 88D8                            mov al, bl; ax = 1111 1111 0011 0011 = FFDD
    31 00000017 C1C010                          rol eax, 16
    32 0000001A 66B8FFFF                        mov ax, 0FFFFh
    33 0000001E 88F8                            mov al, bh
    34 00000020 66C1E002                        shl ax, 2
    35 00000024 8A0D[00000000]                  mov cl, [a]
    36 0000002A 80E180                          and cl, 10000000b
    37 0000002D D0C1                            rol cl, 1; cl =01h
    38 0000002F 08C8                            or al, cl
    39 00000031 D0C1                            rol cl, 1
    40 00000033 08C8                            or al, cl
    41                                          
    42                                          
    43                                          
    44                                          
    45                                          
    46                                      
    47                                          ; exit(0)
    48 00000035 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    49 00000037 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
